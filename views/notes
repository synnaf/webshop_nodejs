<%- include ("header.ejs") %>
<%- include ("navbar.ejs") %>
<main>
    <div class="pageheadline">
        <h1>Tack för din beställning!</h1>
    </div>
    <div class="userinfo">
        <h4>Tack <%= customer.fName %>!</h4>
        <span>Dina varor kommer att levereras till följande adress:</span>
        <!-- <span><%= customer.fName %> <%= customer.lName %></span>
        <span><%= customer.address %></span>
        <span><%= customer.city %></span> -->

    </div>
    <form class="startbuttons" method="get">
        <button type="submit" formaction="/">STARTSIDA</button>
        <button type="submit" formaction="logout">LOGGA UT</button>
    </form>
</main>
<%- include ("footer.ejs") %>


---------


/*  ---------------------  HÄMTA CONFIRMATION   -----------------------  */

router.get(ROUTE.confirmation, verifyToken, async (req, res) => {

    if (verifyToken) {
        //här vill vi populera Order utifrån user 
        const showUserInfo = await UserModel.findOne({ _id: req.body.userInfo._id })
            .populate('wishlist.productId', {
                artist: 1,
                album: 1,
                price: 1
            })
        res.status(202).render(VIEW.checkout, { ROUTE, showUserInfo, token: (req.cookies.jsonwebtoken !== undefined) ? true : false })
    } else {
        return res.status(202).render(VIEW.checkout, {
            ROUTE,
            showUserInfo: "empty order",
            token: (req.cookies.jsonwebtoken !== undefined) ? true : false
        })
    }
    
    //     //när man trycker på beställ: 
    //     //hitta enligt produktmodellen - mer än en 
    //     const products = await ProductModel.findOne({
    //         _id: req.params.id
    //     });

    //     //hitta enligt usermodellen 
    //     const user = await UserModel.findOne({
    //         _id: req.body.userInfo._id
    //     });

    //     //lägg till enligt metoden 
    //     user.orderProducts(products);

    //     //skicka användaren till confirmation??? eller vart ska användaren 
    //     return res.redirect("/orderconfirmation")

    // } else {
    //     return res.status(202).render(VIEW.confirmation, {
    //         ROUTE,
    //         showUserInfo: "Ingen order",
    //         token: (req.cookies.jsonwebtoken !== undefined) ? true : false
    //     })
    // }
})


//i routen dit man redirectas sedan kommer populate att ske 
router.get("/orderconfirmation", async (req,res)=> {

    //hittar ej användaren 
    const showUserInfo = await UserModel.findOne({ _id: req.body.userInfo._id }).populate('Orders.ordedByUser'); 
    console.log(showUserInfo + " trying to find user")
    
    res.send("Hej" + showUserInfo);
    // res.render(VIEW.confirmation, { ROUTE, showUserInfo, token: (req.cookies.jsonwebtoken !== undefined) ? true : false })

})